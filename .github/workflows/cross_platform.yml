on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'compact_str/**'
      - '.github/workflows/cross_platform.yml'
      - '!CHANGELOG.md'
      - '!**/README.md'
  workflow_dispatch:

name: X-Plat

env:
  CARGO_TERM_COLOR: "always"
  # local default for proptest is 100
  PROPTEST_CASES: 1000
  RUSTFLAGS: "-D warnings"
  MIRIFAGS: "-Zmiri-tag-raw-pointers -Zmiri-check-number-validity"

jobs:
  x_plat_os:
    name: x_plat_os
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-x-plat-${{ matrix.os }}
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml -- --include-ignored
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml

  x_plat_arch:
    name: x_plat_arch
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          # 32-bit Little Endian
          "i686-unknown-linux-gnu",
          "arm-unknown-linux-gnueabihf",
          "armv7-unknown-linux-gnueabihf",
          # 32-bit Big Endian
          "powerpc-unknown-linux-gnu",
          # 64-bit Little Endian
          "powerpc64le-unknown-linux-gnu",
          "aarch64-unknown-linux-gnu",
          # 64-bit Big Endian
          "powerpc64-unknown-linux-gnu",
        ]
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repo
      - uses: actions-rs/toolchain@v1
        name: Install Rust
        with:
          profile: minimal
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
          components: miri
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-x-plat-${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          use-cross: true
          command: test
          args: --release --all-features --manifest-path=compact_str/Cargo.toml --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        name: cargo test miri
        with:
          command: miri
          args: test --all-features --manifest-path=compact_str/Cargo.toml --target ${{ matrix.target }}
